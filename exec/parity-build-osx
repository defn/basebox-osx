#!/usr/bin/env bash

function main {
  local shome="$(cd -P -- "${BASH_SOURCE%/*}/.." && pwd -P)"
  source "$shome/script/profile"

  cd "$shome"

  local json_var='{}'

  local nm_packer_builder="$VAGRANT_DEFAULT_PROVIDER"
  local nm_provider

  case "$nm_packer_builder" in
    vmware_fusion|vmware_desktop)
      nm_provider="vmware_desktop"
      nm_packer_builder="vmware-${BASEBOX_TYPE:-iso}"
      ;;

    "")
      true ;;

    "{"*)
      json_var="$nm_packer_builder"
      nm_packer_builder=
      ;;

    *)
      echo ERROR: "Invalid virtualization type: $nm_provider" 1>&2
      return 1
      ;;
  esac

  case "${1:-}" in
    "{"*)
      json_var="$1"; shift
      ;;
  esac

  local tmp_packer="$(mktemp -t XXXXXX)"
  cat "packer.json" | jq \
    --arg provider "$nm_provider" '.provisioners[].scripts = 
    [ "script/ubuntu.sh",
      "script/network.sh",
      "script/vmware.sh",
      "script/update.sh",
      "script/xcode.sh",
      "script/minimize.sh" 
    ]' | tee "$tmp_packer"

  local tmp_options="$(mktemp -t XXXXXX)"
  jq -n \
    --arg iso_dir "$shome" \
    '{  
        iso_dir: $iso_dir 
     }' | tee "$tmp_options"

  packer build${nm_packer_builder:+ -only="$nm_packer_builder"} -var-file "$tmp_options" "$tmp_packer"
  rm -f "$tmp_options" "$tmp_packer"
}

source sub "$BASH_SOURCE" "$@"
